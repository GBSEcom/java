/*
 * Payment Gateway API Specification.
 * The documentation here is designed to provide all of the technical guidance required to consume and integrate with our APIs for payment processing. To learn more about our APIs please visit https://docs.firstdata.com/org/gateway.
 *
 * The version of the OpenAPI document: 6.13.0.20200810.001
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.GBSEcom.model;

import java.util.Objects;
import java.util.Arrays;
import com.github.GBSEcom.model.Address;
import com.github.GBSEcom.model.Contact;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;

/**
 * Customer billing information.
 */
@ApiModel(description = "Customer billing information.")

public class Billing {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CUSTOMER_ID = "customerId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ID)
  private String customerId;

  public static final String SERIALIZED_NAME_BIRTH_DATE = "birthDate";
  @SerializedName(SERIALIZED_NAME_BIRTH_DATE)
  private LocalDate birthDate;

  public static final String SERIALIZED_NAME_CONTACT = "contact";
  @SerializedName(SERIALIZED_NAME_CONTACT)
  private Contact contact;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private Address address;


  public Billing name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Billing name.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "John Doe", value = "Billing name.")

  public String getName() {
    return name;
  }



  public void setName(String name) {
    this.name = name;
  }


  public Billing customerId(String customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * Customer ID for billing purpose.
   * @return customerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1234567890", value = "Customer ID for billing purpose.")

  public String getCustomerId() {
    return customerId;
  }



  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public Billing birthDate(LocalDate birthDate) {
    
    this.birthDate = birthDate;
    return this;
  }

   /**
   * Customer birth date.
   * @return birthDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Wed Jan 30 19:00:00 EST 1980", value = "Customer birth date.")

  public LocalDate getBirthDate() {
    return birthDate;
  }



  public void setBirthDate(LocalDate birthDate) {
    this.birthDate = birthDate;
  }


  public Billing contact(Contact contact) {
    
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Contact getContact() {
    return contact;
  }



  public void setContact(Contact contact) {
    this.contact = contact;
  }


  public Billing address(Address address) {
    
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Address getAddress() {
    return address;
  }



  public void setAddress(Address address) {
    this.address = address;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Billing billing = (Billing) o;
    return Objects.equals(this.name, billing.name) &&
        Objects.equals(this.customerId, billing.customerId) &&
        Objects.equals(this.birthDate, billing.birthDate) &&
        Objects.equals(this.contact, billing.contact) &&
        Objects.equals(this.address, billing.address);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, customerId, birthDate, contact, address);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Billing {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

