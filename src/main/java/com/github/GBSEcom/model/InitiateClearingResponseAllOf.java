/*
 * Payment Gateway API Specification.
 * The documentation here is designed to provide all of the technical guidance required to consume and integrate with our APIs for payment processing. To learn more about our APIs please visit https://docs.firstdata.com/org/gateway.
 *
 * The version of the OpenAPI document: 6.14.0.20201015.001
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.GBSEcom.model;

import java.util.Objects;
import java.util.Arrays;
import com.github.GBSEcom.model.ClearingDetails;
import com.github.GBSEcom.model.EndpointResponse;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * InitiateClearingResponseAllOf
 */

public class InitiateClearingResponseAllOf {
  /**
   * Request status. If it is anything other than &#39;SUCCESS&#39;, please refer to 400s HTTP error codes or decline. See Error object for details.
   */
  @JsonAdapter(RequestStatusEnum.Adapter.class)
  public enum RequestStatusEnum {
    SUCCESS("SUCCESS"),
    
    PROCESSING_FAILED("PROCESSING_FAILED"),
    
    FAILURE("FAILURE");

    private String value;

    RequestStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RequestStatusEnum fromValue(String value) {
      for (RequestStatusEnum b : RequestStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RequestStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RequestStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RequestStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RequestStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_REQUEST_STATUS = "requestStatus";
  @SerializedName(SERIALIZED_NAME_REQUEST_STATUS)
  private RequestStatusEnum requestStatus;

  public static final String SERIALIZED_NAME_CLEARING_DETAILS = "clearingDetails";
  @SerializedName(SERIALIZED_NAME_CLEARING_DETAILS)
  private ClearingDetails clearingDetails;

  public static final String SERIALIZED_NAME_ENDPOINT_RESPONSES = "endpointResponses";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_RESPONSES)
  private List<EndpointResponse> endpointResponses = null;


  public InitiateClearingResponseAllOf requestStatus(RequestStatusEnum requestStatus) {
    
    this.requestStatus = requestStatus;
    return this;
  }

   /**
   * Request status. If it is anything other than &#39;SUCCESS&#39;, please refer to 400s HTTP error codes or decline. See Error object for details.
   * @return requestStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "SUCCESS", value = "Request status. If it is anything other than 'SUCCESS', please refer to 400s HTTP error codes or decline. See Error object for details.")

  public RequestStatusEnum getRequestStatus() {
    return requestStatus;
  }



  public void setRequestStatus(RequestStatusEnum requestStatus) {
    this.requestStatus = requestStatus;
  }


  public InitiateClearingResponseAllOf clearingDetails(ClearingDetails clearingDetails) {
    
    this.clearingDetails = clearingDetails;
    return this;
  }

   /**
   * Get clearingDetails
   * @return clearingDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ClearingDetails getClearingDetails() {
    return clearingDetails;
  }



  public void setClearingDetails(ClearingDetails clearingDetails) {
    this.clearingDetails = clearingDetails;
  }


  public InitiateClearingResponseAllOf endpointResponses(List<EndpointResponse> endpointResponses) {
    
    this.endpointResponses = endpointResponses;
    return this;
  }

  public InitiateClearingResponseAllOf addEndpointResponsesItem(EndpointResponse endpointResponsesItem) {
    if (this.endpointResponses == null) {
      this.endpointResponses = new ArrayList<>();
    }
    this.endpointResponses.add(endpointResponsesItem);
    return this;
  }

   /**
   * The array holds response information of the involved endpoints.
   * @return endpointResponses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The array holds response information of the involved endpoints.")

  public List<EndpointResponse> getEndpointResponses() {
    return endpointResponses;
  }



  public void setEndpointResponses(List<EndpointResponse> endpointResponses) {
    this.endpointResponses = endpointResponses;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InitiateClearingResponseAllOf initiateClearingResponseAllOf = (InitiateClearingResponseAllOf) o;
    return Objects.equals(this.requestStatus, initiateClearingResponseAllOf.requestStatus) &&
        Objects.equals(this.clearingDetails, initiateClearingResponseAllOf.clearingDetails) &&
        Objects.equals(this.endpointResponses, initiateClearingResponseAllOf.endpointResponses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestStatus, clearingDetails, endpointResponses);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InitiateClearingResponseAllOf {\n");
    sb.append("    requestStatus: ").append(toIndentedString(requestStatus)).append("\n");
    sb.append("    clearingDetails: ").append(toIndentedString(clearingDetails)).append("\n");
    sb.append("    endpointResponses: ").append(toIndentedString(endpointResponses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

