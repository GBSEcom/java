/*
 * Payment Gateway API Specification.
 * Payment Gateway API for payment processing. Version 6.4.0.20181018.001 
 *
 * OpenAPI spec version: 6.4.0.20181018.001
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.GBSEcom.model;

import java.util.Objects;
import java.util.Arrays;
import com.github.GBSEcom.model.AuthenticationRequest;
import com.github.GBSEcom.model.Expiration;
import com.github.GBSEcom.model.PaymentCardAuthenticationResult;
import com.github.GBSEcom.model.PaymentTokenization;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Payment card model
 */
@ApiModel(description = "Payment card model")

public class PaymentCard {
  public static final String SERIALIZED_NAME_NUMBER = "number";
  @SerializedName(SERIALIZED_NAME_NUMBER)
  private String number;

  public static final String SERIALIZED_NAME_EXPIRY_DATE = "expiryDate";
  @SerializedName(SERIALIZED_NAME_EXPIRY_DATE)
  private Expiration expiryDate = null;

  public static final String SERIALIZED_NAME_SECURITY_CODE = "securityCode";
  @SerializedName(SERIALIZED_NAME_SECURITY_CODE)
  private String securityCode;

  public static final String SERIALIZED_NAME_PAYMENT_TOKENIZATION = "paymentTokenization";
  @SerializedName(SERIALIZED_NAME_PAYMENT_TOKENIZATION)
  private PaymentTokenization paymentTokenization = null;

  public static final String SERIALIZED_NAME_CARD_FUNCTION = "cardFunction";
  @SerializedName(SERIALIZED_NAME_CARD_FUNCTION)
  private String cardFunction;

  public static final String SERIALIZED_NAME_CARDHOLDER_NAME = "cardholderName";
  @SerializedName(SERIALIZED_NAME_CARDHOLDER_NAME)
  private String cardholderName;

  public static final String SERIALIZED_NAME_AUTHENTICATION_REQUEST = "authenticationRequest";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_REQUEST)
  private AuthenticationRequest authenticationRequest = null;

  public static final String SERIALIZED_NAME_AUTHENTICATION_RESULT = "authenticationResult";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_RESULT)
  private PaymentCardAuthenticationResult authenticationResult = null;

  public static final String SERIALIZED_NAME_BIN = "bin";
  @SerializedName(SERIALIZED_NAME_BIN)
  private String bin;

  public static final String SERIALIZED_NAME_LAST4 = "last4";
  @SerializedName(SERIALIZED_NAME_LAST4)
  private String last4;

  public static final String SERIALIZED_NAME_BRAND = "brand";
  @SerializedName(SERIALIZED_NAME_BRAND)
  private String brand;

  public static final String SERIALIZED_NAME_ISSUING_COUNTRY = "issuingCountry";
  @SerializedName(SERIALIZED_NAME_ISSUING_COUNTRY)
  private String issuingCountry;

  public PaymentCard number(String number) {
    this.number = number;
    return this;
  }

   /**
   * Payment card number
   * @return number
  **/
  @ApiModelProperty(example = "5424180279791732", value = "Payment card number")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public PaymentCard expiryDate(Expiration expiryDate) {
    this.expiryDate = expiryDate;
    return this;
  }

   /**
   * Get expiryDate
   * @return expiryDate
  **/
  @ApiModelProperty(value = "")
  public Expiration getExpiryDate() {
    return expiryDate;
  }

  public void setExpiryDate(Expiration expiryDate) {
    this.expiryDate = expiryDate;
  }

  public PaymentCard securityCode(String securityCode) {
    this.securityCode = securityCode;
    return this;
  }

   /**
   * Card Verification Value/Number
   * @return securityCode
  **/
  @ApiModelProperty(example = "977", value = "Card Verification Value/Number")
  public String getSecurityCode() {
    return securityCode;
  }

  public void setSecurityCode(String securityCode) {
    this.securityCode = securityCode;
  }

  public PaymentCard paymentTokenization(PaymentTokenization paymentTokenization) {
    this.paymentTokenization = paymentTokenization;
    return this;
  }

   /**
   * Get paymentTokenization
   * @return paymentTokenization
  **/
  @ApiModelProperty(value = "")
  public PaymentTokenization getPaymentTokenization() {
    return paymentTokenization;
  }

  public void setPaymentTokenization(PaymentTokenization paymentTokenization) {
    this.paymentTokenization = paymentTokenization;
  }

  public PaymentCard cardFunction(String cardFunction) {
    this.cardFunction = cardFunction;
    return this;
  }

   /**
   * Card function. Optional, valid values are CREDIT or DEBIT.
   * @return cardFunction
  **/
  @ApiModelProperty(value = "Card function. Optional, valid values are CREDIT or DEBIT.")
  public String getCardFunction() {
    return cardFunction;
  }

  public void setCardFunction(String cardFunction) {
    this.cardFunction = cardFunction;
  }

  public PaymentCard cardholderName(String cardholderName) {
    this.cardholderName = cardholderName;
    return this;
  }

   /**
   * Name of the cardholder on the card
   * @return cardholderName
  **/
  @ApiModelProperty(example = "John Doe", value = "Name of the cardholder on the card")
  public String getCardholderName() {
    return cardholderName;
  }

  public void setCardholderName(String cardholderName) {
    this.cardholderName = cardholderName;
  }

  public PaymentCard authenticationRequest(AuthenticationRequest authenticationRequest) {
    this.authenticationRequest = authenticationRequest;
    return this;
  }

   /**
   * Get authenticationRequest
   * @return authenticationRequest
  **/
  @ApiModelProperty(value = "")
  public AuthenticationRequest getAuthenticationRequest() {
    return authenticationRequest;
  }

  public void setAuthenticationRequest(AuthenticationRequest authenticationRequest) {
    this.authenticationRequest = authenticationRequest;
  }

  public PaymentCard authenticationResult(PaymentCardAuthenticationResult authenticationResult) {
    this.authenticationResult = authenticationResult;
    return this;
  }

   /**
   * Get authenticationResult
   * @return authenticationResult
  **/
  @ApiModelProperty(value = "")
  public PaymentCardAuthenticationResult getAuthenticationResult() {
    return authenticationResult;
  }

  public void setAuthenticationResult(PaymentCardAuthenticationResult authenticationResult) {
    this.authenticationResult = authenticationResult;
  }

  public PaymentCard bin(String bin) {
    this.bin = bin;
    return this;
  }

   /**
   * The payment card BIN
   * @return bin
  **/
  @ApiModelProperty(example = "403587", value = "The payment card BIN")
  public String getBin() {
    return bin;
  }

  public void setBin(String bin) {
    this.bin = bin;
  }

  public PaymentCard last4(String last4) {
    this.last4 = last4;
    return this;
  }

   /**
   * The last 4 payment card numbers
   * @return last4
  **/
  @ApiModelProperty(example = "4977", value = "The last 4 payment card numbers")
  public String getLast4() {
    return last4;
  }

  public void setLast4(String last4) {
    this.last4 = last4;
  }

  public PaymentCard brand(String brand) {
    this.brand = brand;
    return this;
  }

   /**
   * Optional, required only if using dual branded card
   * @return brand
  **/
  @ApiModelProperty(example = "VISA", value = "Optional, required only if using dual branded card")
  public String getBrand() {
    return brand;
  }

  public void setBrand(String brand) {
    this.brand = brand;
  }

  public PaymentCard issuingCountry(String issuingCountry) {
    this.issuingCountry = issuingCountry;
    return this;
  }

   /**
   * The issuing country
   * @return issuingCountry
  **/
  @ApiModelProperty(example = "DE", value = "The issuing country")
  public String getIssuingCountry() {
    return issuingCountry;
  }

  public void setIssuingCountry(String issuingCountry) {
    this.issuingCountry = issuingCountry;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentCard paymentCard = (PaymentCard) o;
    return Objects.equals(this.number, paymentCard.number) &&
        Objects.equals(this.expiryDate, paymentCard.expiryDate) &&
        Objects.equals(this.securityCode, paymentCard.securityCode) &&
        Objects.equals(this.paymentTokenization, paymentCard.paymentTokenization) &&
        Objects.equals(this.cardFunction, paymentCard.cardFunction) &&
        Objects.equals(this.cardholderName, paymentCard.cardholderName) &&
        Objects.equals(this.authenticationRequest, paymentCard.authenticationRequest) &&
        Objects.equals(this.authenticationResult, paymentCard.authenticationResult) &&
        Objects.equals(this.bin, paymentCard.bin) &&
        Objects.equals(this.last4, paymentCard.last4) &&
        Objects.equals(this.brand, paymentCard.brand) &&
        Objects.equals(this.issuingCountry, paymentCard.issuingCountry);
  }

  @Override
  public int hashCode() {
    return Objects.hash(number, expiryDate, securityCode, paymentTokenization, cardFunction, cardholderName, authenticationRequest, authenticationResult, bin, last4, brand, issuingCountry);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentCard {\n");
    
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    securityCode: ").append(toIndentedString(securityCode)).append("\n");
    sb.append("    paymentTokenization: ").append(toIndentedString(paymentTokenization)).append("\n");
    sb.append("    cardFunction: ").append(toIndentedString(cardFunction)).append("\n");
    sb.append("    cardholderName: ").append(toIndentedString(cardholderName)).append("\n");
    sb.append("    authenticationRequest: ").append(toIndentedString(authenticationRequest)).append("\n");
    sb.append("    authenticationResult: ").append(toIndentedString(authenticationResult)).append("\n");
    sb.append("    bin: ").append(toIndentedString(bin)).append("\n");
    sb.append("    last4: ").append(toIndentedString(last4)).append("\n");
    sb.append("    brand: ").append(toIndentedString(brand)).append("\n");
    sb.append("    issuingCountry: ").append(toIndentedString(issuingCountry)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

