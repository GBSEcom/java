/*
 * Payment Gateway API Specification.
 * The documentation here is designed to provide all of the technical guidance required to consume and integrate with our APIs for payment processing. To learn more about our APIs please visit https://docs.firstdata.com/org/gateway.
 *
 * The version of the OpenAPI document: 21.5.0.20211029.001
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.GBSEcom.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Currency conversion. Abstract class, do not use this class directly, use one of its children: Dcc, DynamicPricing.
 */
@ApiModel(description = "Currency conversion. Abstract class, do not use this class directly, use one of its children: Dcc, DynamicPricing.")


public class CurrencyConversion {
  public static final String SERIALIZED_NAME_CONVERSION_TYPE = "conversionType";
  @SerializedName(SERIALIZED_NAME_CONVERSION_TYPE)
  private String conversionType;

  public static final String SERIALIZED_NAME_INQUIRY_RATE_ID = "inquiryRateId";
  @SerializedName(SERIALIZED_NAME_INQUIRY_RATE_ID)
  private String inquiryRateId;

  public CurrencyConversion() {
    this.conversionType = this.getClass().getSimpleName();
  }

  public CurrencyConversion conversionType(String conversionType) {
    
    this.conversionType = conversionType;
    return this;
  }

   /**
   * Type of currency conversion.
   * @return conversionType
  **/
  @ApiModelProperty(example = "Dcc", required = true, value = "Type of currency conversion.")

  public String getConversionType() {
    return conversionType;
  }



  public void setConversionType(String conversionType) {
    this.conversionType = conversionType;
  }


  public CurrencyConversion inquiryRateId(String inquiryRateId) {
    
    this.inquiryRateId = inquiryRateId;
    return this;
  }

   /**
   * Inquiry rate id.
   * @return inquiryRateId
  **/
  @ApiModelProperty(example = "123456", required = true, value = "Inquiry rate id.")

  public String getInquiryRateId() {
    return inquiryRateId;
  }



  public void setInquiryRateId(String inquiryRateId) {
    this.inquiryRateId = inquiryRateId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CurrencyConversion currencyConversion = (CurrencyConversion) o;
    return Objects.equals(this.conversionType, currencyConversion.conversionType) &&
        Objects.equals(this.inquiryRateId, currencyConversion.inquiryRateId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conversionType, inquiryRateId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CurrencyConversion {\n");
    sb.append("    conversionType: ").append(toIndentedString(conversionType)).append("\n");
    sb.append("    inquiryRateId: ").append(toIndentedString(inquiryRateId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

