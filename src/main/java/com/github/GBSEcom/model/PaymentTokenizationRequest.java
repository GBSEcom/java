/*
 * Payment Gateway API Specification.
 * Payment Gateway API for payment processing. Version 6.4.0.20181018.001 
 *
 * OpenAPI spec version: 6.4.0.20181018.001
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.GBSEcom.model;

import java.util.Objects;
import java.util.Arrays;
import com.github.GBSEcom.model.Address;
import com.github.GBSEcom.model.PaymentCard;
import com.github.GBSEcom.model.ReferencedOrder;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * this object is used to generate payment tokens.
 */
@ApiModel(description = "this object is used to generate payment tokens.")

public class PaymentTokenizationRequest {
  /**
   * Use this to indicate the type of tokenization source
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    PAYMENT_CARD("PAYMENT_CARD"),
    
    EXISTING_ORDER("EXISTING_ORDER");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + text + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_PAYMENT_CARD = "paymentCard";
  @SerializedName(SERIALIZED_NAME_PAYMENT_CARD)
  private PaymentCard paymentCard = null;

  public static final String SERIALIZED_NAME_REFERENCED_ORDER = "referencedOrder";
  @SerializedName(SERIALIZED_NAME_REFERENCED_ORDER)
  private ReferencedOrder referencedOrder = null;

  public static final String SERIALIZED_NAME_BILLING_ADDRESS = "billingAddress";
  @SerializedName(SERIALIZED_NAME_BILLING_ADDRESS)
  private Address billingAddress = null;

  public PaymentTokenizationRequest type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Use this to indicate the type of tokenization source
   * @return type
  **/
  @ApiModelProperty(required = true, value = "Use this to indicate the type of tokenization source")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public PaymentTokenizationRequest paymentCard(PaymentCard paymentCard) {
    this.paymentCard = paymentCard;
    return this;
  }

   /**
   * Get paymentCard
   * @return paymentCard
  **/
  @ApiModelProperty(value = "")
  public PaymentCard getPaymentCard() {
    return paymentCard;
  }

  public void setPaymentCard(PaymentCard paymentCard) {
    this.paymentCard = paymentCard;
  }

  public PaymentTokenizationRequest referencedOrder(ReferencedOrder referencedOrder) {
    this.referencedOrder = referencedOrder;
    return this;
  }

   /**
   * Get referencedOrder
   * @return referencedOrder
  **/
  @ApiModelProperty(value = "")
  public ReferencedOrder getReferencedOrder() {
    return referencedOrder;
  }

  public void setReferencedOrder(ReferencedOrder referencedOrder) {
    this.referencedOrder = referencedOrder;
  }

  public PaymentTokenizationRequest billingAddress(Address billingAddress) {
    this.billingAddress = billingAddress;
    return this;
  }

   /**
   * Get billingAddress
   * @return billingAddress
  **/
  @ApiModelProperty(value = "")
  public Address getBillingAddress() {
    return billingAddress;
  }

  public void setBillingAddress(Address billingAddress) {
    this.billingAddress = billingAddress;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentTokenizationRequest paymentTokenizationRequest = (PaymentTokenizationRequest) o;
    return Objects.equals(this.type, paymentTokenizationRequest.type) &&
        Objects.equals(this.paymentCard, paymentTokenizationRequest.paymentCard) &&
        Objects.equals(this.referencedOrder, paymentTokenizationRequest.referencedOrder) &&
        Objects.equals(this.billingAddress, paymentTokenizationRequest.billingAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, paymentCard, referencedOrder, billingAddress);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentTokenizationRequest {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    paymentCard: ").append(toIndentedString(paymentCard)).append("\n");
    sb.append("    referencedOrder: ").append(toIndentedString(referencedOrder)).append("\n");
    sb.append("    billingAddress: ").append(toIndentedString(billingAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

