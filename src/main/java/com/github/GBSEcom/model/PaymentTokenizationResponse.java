/*
 * Payment Gateway API Specification.
 * Payment Gateway API for payment processing. Version 6.4.0.20181018.001 
 *
 * OpenAPI spec version: 6.4.0.20181018.001
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.GBSEcom.model;

import java.util.Objects;
import java.util.Arrays;
import com.github.GBSEcom.model.AVSResponse;
import com.github.GBSEcom.model.BasicResponse;
import com.github.GBSEcom.model.PaymentCard;
import com.github.GBSEcom.model.PaymentTokenization;
import com.github.GBSEcom.model.ResponseType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PaymentTokenizationResponse
 */

public class PaymentTokenizationResponse extends BasicResponse {
  /**
   * The status of the request
   */
  @JsonAdapter(RequestStatusEnum.Adapter.class)
  public enum RequestStatusEnum {
    DELETED("DELETED"),
    
    FAILED("FAILED"),
    
    SUCCESS("SUCCESS"),
    
    APPROVED("APPROVED"),
    
    WAITING("WAITING"),
    
    VALIDATION_FAILED("VALIDATION_FAILED"),
    
    DECLINED("DECLINED");

    private String value;

    RequestStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RequestStatusEnum fromValue(String text) {
      for (RequestStatusEnum b : RequestStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + text + "'");
    }

    public static class Adapter extends TypeAdapter<RequestStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RequestStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RequestStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RequestStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  public static final String SERIALIZED_NAME_REQUEST_STATUS = "requestStatus";
  @SerializedName(SERIALIZED_NAME_REQUEST_STATUS)
  private RequestStatusEnum requestStatus;

  public static final String SERIALIZED_NAME_REQUEST_TIME = "requestTime";
  @SerializedName(SERIALIZED_NAME_REQUEST_TIME)
  private String requestTime;

  public static final String SERIALIZED_NAME_AVS_RESPONSE = "avsResponse";
  @SerializedName(SERIALIZED_NAME_AVS_RESPONSE)
  private AVSResponse avsResponse = null;

  public static final String SERIALIZED_NAME_SECURITY_CODE_RESPONSE = "securityCodeResponse";
  @SerializedName(SERIALIZED_NAME_SECURITY_CODE_RESPONSE)
  private String securityCodeResponse;

  public static final String SERIALIZED_NAME_BRAND = "brand";
  @SerializedName(SERIALIZED_NAME_BRAND)
  private String brand;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_PAYMENT_TOKEN = "paymentToken";
  @SerializedName(SERIALIZED_NAME_PAYMENT_TOKEN)
  private PaymentTokenization paymentToken = null;

  public static final String SERIALIZED_NAME_PAYMENT_CARD = "paymentCard";
  @SerializedName(SERIALIZED_NAME_PAYMENT_CARD)
  private PaymentCard paymentCard = null;

  public PaymentTokenizationResponse requestStatus(RequestStatusEnum requestStatus) {
    this.requestStatus = requestStatus;
    return this;
  }

   /**
   * The status of the request
   * @return requestStatus
  **/
  @ApiModelProperty(value = "The status of the request")
  public RequestStatusEnum getRequestStatus() {
    return requestStatus;
  }

  public void setRequestStatus(RequestStatusEnum requestStatus) {
    this.requestStatus = requestStatus;
  }

  public PaymentTokenizationResponse requestTime(String requestTime) {
    this.requestTime = requestTime;
    return this;
  }

   /**
   * Time of the request
   * @return requestTime
  **/
  @ApiModelProperty(value = "Time of the request")
  public String getRequestTime() {
    return requestTime;
  }

  public void setRequestTime(String requestTime) {
    this.requestTime = requestTime;
  }

  public PaymentTokenizationResponse avsResponse(AVSResponse avsResponse) {
    this.avsResponse = avsResponse;
    return this;
  }

   /**
   * Get avsResponse
   * @return avsResponse
  **/
  @ApiModelProperty(value = "")
  public AVSResponse getAvsResponse() {
    return avsResponse;
  }

  public void setAvsResponse(AVSResponse avsResponse) {
    this.avsResponse = avsResponse;
  }

  public PaymentTokenizationResponse securityCodeResponse(String securityCodeResponse) {
    this.securityCodeResponse = securityCodeResponse;
    return this;
  }

   /**
   * Optional security code check response
   * @return securityCodeResponse
  **/
  @ApiModelProperty(value = "Optional security code check response")
  public String getSecurityCodeResponse() {
    return securityCodeResponse;
  }

  public void setSecurityCodeResponse(String securityCodeResponse) {
    this.securityCodeResponse = securityCodeResponse;
  }

  public PaymentTokenizationResponse brand(String brand) {
    this.brand = brand;
    return this;
  }

   /**
   * Card brand
   * @return brand
  **/
  @ApiModelProperty(value = "Card brand")
  public String getBrand() {
    return brand;
  }

  public void setBrand(String brand) {
    this.brand = brand;
  }

  public PaymentTokenizationResponse country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Country of the card issued
   * @return country
  **/
  @ApiModelProperty(value = "Country of the card issued")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public PaymentTokenizationResponse paymentToken(PaymentTokenization paymentToken) {
    this.paymentToken = paymentToken;
    return this;
  }

   /**
   * Get paymentToken
   * @return paymentToken
  **/
  @ApiModelProperty(value = "")
  public PaymentTokenization getPaymentToken() {
    return paymentToken;
  }

  public void setPaymentToken(PaymentTokenization paymentToken) {
    this.paymentToken = paymentToken;
  }

  public PaymentTokenizationResponse paymentCard(PaymentCard paymentCard) {
    this.paymentCard = paymentCard;
    return this;
  }

   /**
   * Get paymentCard
   * @return paymentCard
  **/
  @ApiModelProperty(value = "")
  public PaymentCard getPaymentCard() {
    return paymentCard;
  }

  public void setPaymentCard(PaymentCard paymentCard) {
    this.paymentCard = paymentCard;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentTokenizationResponse paymentTokenizationResponse = (PaymentTokenizationResponse) o;
    return Objects.equals(this.requestStatus, paymentTokenizationResponse.requestStatus) &&
        Objects.equals(this.requestTime, paymentTokenizationResponse.requestTime) &&
        Objects.equals(this.avsResponse, paymentTokenizationResponse.avsResponse) &&
        Objects.equals(this.securityCodeResponse, paymentTokenizationResponse.securityCodeResponse) &&
        Objects.equals(this.brand, paymentTokenizationResponse.brand) &&
        Objects.equals(this.country, paymentTokenizationResponse.country) &&
        Objects.equals(this.paymentToken, paymentTokenizationResponse.paymentToken) &&
        Objects.equals(this.paymentCard, paymentTokenizationResponse.paymentCard) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestStatus, requestTime, avsResponse, securityCodeResponse, brand, country, paymentToken, paymentCard, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentTokenizationResponse {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    requestStatus: ").append(toIndentedString(requestStatus)).append("\n");
    sb.append("    requestTime: ").append(toIndentedString(requestTime)).append("\n");
    sb.append("    avsResponse: ").append(toIndentedString(avsResponse)).append("\n");
    sb.append("    securityCodeResponse: ").append(toIndentedString(securityCodeResponse)).append("\n");
    sb.append("    brand: ").append(toIndentedString(brand)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    paymentToken: ").append(toIndentedString(paymentToken)).append("\n");
    sb.append("    paymentCard: ").append(toIndentedString(paymentCard)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

