/*
 * Payment Gateway API Specification.
 * The documentation here is designed to provide all of the technical guidance required to consume and integrate with our APIs for payment processing. To learn more about our APIs please visit https://docs.firstdata.com/org/gateway.
 *
 * The version of the OpenAPI document: 21.5.0.20211029.001
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.GBSEcom.model;

import java.util.Objects;
import java.util.Arrays;
import com.github.GBSEcom.model.Amount;
import com.github.GBSEcom.model.ManagedRedirectTransactionType;
import com.github.GBSEcom.model.Order;
import com.github.GBSEcom.model.RedirectAttributes;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Request to generate an embedded payment link for Managed redirect.
 */
@ApiModel(description = "Request to generate an embedded payment link for Managed redirect.")


public class ManagedRedirectPrimaryRequest {
  public static final String SERIALIZED_NAME_REQUEST_TYPE = "requestType";
  @SerializedName(SERIALIZED_NAME_REQUEST_TYPE)
  private String requestType;

  public static final String SERIALIZED_NAME_TRANSACTION_AMOUNT = "transactionAmount";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_AMOUNT)
  private Amount transactionAmount;

  public static final String SERIALIZED_NAME_STORE_ID = "storeId";
  @SerializedName(SERIALIZED_NAME_STORE_ID)
  private String storeId;

  public static final String SERIALIZED_NAME_MERCHANT_TRANSACTION_ID = "merchantTransactionId";
  @SerializedName(SERIALIZED_NAME_MERCHANT_TRANSACTION_ID)
  private String merchantTransactionId;

  public static final String SERIALIZED_NAME_TRANSACTION_TYPE = "transactionType";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_TYPE)
  private ManagedRedirectTransactionType transactionType;

  public static final String SERIALIZED_NAME_ORDER = "order";
  @SerializedName(SERIALIZED_NAME_ORDER)
  private Order order;

  public static final String SERIALIZED_NAME_REDIRECT_ATTRIBUTES = "redirectAttributes";
  @SerializedName(SERIALIZED_NAME_REDIRECT_ATTRIBUTES)
  private RedirectAttributes redirectAttributes;

  public ManagedRedirectPrimaryRequest() {
    this.requestType = this.getClass().getSimpleName();
  }

  public ManagedRedirectPrimaryRequest requestType(String requestType) {
    
    this.requestType = requestType;
    return this;
  }

   /**
   * Object name of the primary transaction request.
   * @return requestType
  **/
  @ApiModelProperty(example = "PaymentCardManagedRedirectRequest", required = true, value = "Object name of the primary transaction request.")

  public String getRequestType() {
    return requestType;
  }



  public void setRequestType(String requestType) {
    this.requestType = requestType;
  }


  public ManagedRedirectPrimaryRequest transactionAmount(Amount transactionAmount) {
    
    this.transactionAmount = transactionAmount;
    return this;
  }

   /**
   * Get transactionAmount
   * @return transactionAmount
  **/
  @ApiModelProperty(required = true, value = "")

  public Amount getTransactionAmount() {
    return transactionAmount;
  }



  public void setTransactionAmount(Amount transactionAmount) {
    this.transactionAmount = transactionAmount;
  }


  public ManagedRedirectPrimaryRequest storeId(String storeId) {
    
    this.storeId = storeId;
    return this;
  }

   /**
   * An optional Outlet ID for clients that support multiple stores in the same developer app.
   * @return storeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "12345500000", value = "An optional Outlet ID for clients that support multiple stores in the same developer app.")

  public String getStoreId() {
    return storeId;
  }



  public void setStoreId(String storeId) {
    this.storeId = storeId;
  }


  public ManagedRedirectPrimaryRequest merchantTransactionId(String merchantTransactionId) {
    
    this.merchantTransactionId = merchantTransactionId;
    return this;
  }

   /**
   * The unique merchant transaction ID from the request, if supplied.
   * @return merchantTransactionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "lsk23532djljff3", value = "The unique merchant transaction ID from the request, if supplied.")

  public String getMerchantTransactionId() {
    return merchantTransactionId;
  }



  public void setMerchantTransactionId(String merchantTransactionId) {
    this.merchantTransactionId = merchantTransactionId;
  }


  public ManagedRedirectPrimaryRequest transactionType(ManagedRedirectTransactionType transactionType) {
    
    this.transactionType = transactionType;
    return this;
  }

   /**
   * Get transactionType
   * @return transactionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ManagedRedirectTransactionType getTransactionType() {
    return transactionType;
  }



  public void setTransactionType(ManagedRedirectTransactionType transactionType) {
    this.transactionType = transactionType;
  }


  public ManagedRedirectPrimaryRequest order(Order order) {
    
    this.order = order;
    return this;
  }

   /**
   * Get order
   * @return order
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Order getOrder() {
    return order;
  }



  public void setOrder(Order order) {
    this.order = order;
  }


  public ManagedRedirectPrimaryRequest redirectAttributes(RedirectAttributes redirectAttributes) {
    
    this.redirectAttributes = redirectAttributes;
    return this;
  }

   /**
   * Get redirectAttributes
   * @return redirectAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RedirectAttributes getRedirectAttributes() {
    return redirectAttributes;
  }



  public void setRedirectAttributes(RedirectAttributes redirectAttributes) {
    this.redirectAttributes = redirectAttributes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ManagedRedirectPrimaryRequest managedRedirectPrimaryRequest = (ManagedRedirectPrimaryRequest) o;
    return Objects.equals(this.requestType, managedRedirectPrimaryRequest.requestType) &&
        Objects.equals(this.transactionAmount, managedRedirectPrimaryRequest.transactionAmount) &&
        Objects.equals(this.storeId, managedRedirectPrimaryRequest.storeId) &&
        Objects.equals(this.merchantTransactionId, managedRedirectPrimaryRequest.merchantTransactionId) &&
        Objects.equals(this.transactionType, managedRedirectPrimaryRequest.transactionType) &&
        Objects.equals(this.order, managedRedirectPrimaryRequest.order) &&
        Objects.equals(this.redirectAttributes, managedRedirectPrimaryRequest.redirectAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestType, transactionAmount, storeId, merchantTransactionId, transactionType, order, redirectAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ManagedRedirectPrimaryRequest {\n");
    sb.append("    requestType: ").append(toIndentedString(requestType)).append("\n");
    sb.append("    transactionAmount: ").append(toIndentedString(transactionAmount)).append("\n");
    sb.append("    storeId: ").append(toIndentedString(storeId)).append("\n");
    sb.append("    merchantTransactionId: ").append(toIndentedString(merchantTransactionId)).append("\n");
    sb.append("    transactionType: ").append(toIndentedString(transactionType)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    redirectAttributes: ").append(toIndentedString(redirectAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

