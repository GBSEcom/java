/*
 * Payment Gateway API Specification.
 * The documentation here is designed to provide all of the technical guidance required to consume and integrate with our APIs for payment processing. To learn more about our APIs please visit https://docs.firstdata.com/org/gateway.
 *
 * OpenAPI spec version: 6.6.0.20190507.002
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.GBSEcom.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Additional paramters for authentication redirect.
 */
@ApiModel(description = "Additional paramters for authentication redirect.")

public class AuthenticationRedirectParams {
  public static final String SERIALIZED_NAME_PAYER_AUTHENTICATION_REQUEST = "payerAuthenticationRequest";
  @SerializedName(SERIALIZED_NAME_PAYER_AUTHENTICATION_REQUEST)
  private String payerAuthenticationRequest;

  public static final String SERIALIZED_NAME_TERM_URL = "termUrl";
  @SerializedName(SERIALIZED_NAME_TERM_URL)
  private String termUrl;

  public static final String SERIALIZED_NAME_MERCHANT_DATA = "merchantData";
  @SerializedName(SERIALIZED_NAME_MERCHANT_DATA)
  private String merchantData;

  public AuthenticationRedirectParams payerAuthenticationRequest(String payerAuthenticationRequest) {
    this.payerAuthenticationRequest = payerAuthenticationRequest;
    return this;
  }

   /**
   * Message sent from merchant server to authenticate the cardholder.
   * @return payerAuthenticationRequest
  **/
  @ApiModelProperty(example = "c7fb83b8ag...73t4a827t4af8738a", value = "Message sent from merchant server to authenticate the cardholder.")
  public String getPayerAuthenticationRequest() {
    return payerAuthenticationRequest;
  }

  public void setPayerAuthenticationRequest(String payerAuthenticationRequest) {
    this.payerAuthenticationRequest = payerAuthenticationRequest;
  }

  public AuthenticationRedirectParams termUrl(String termUrl) {
    this.termUrl = termUrl;
    return this;
  }

   /**
   * Terminal URL for processing request.
   * @return termUrl
  **/
  @ApiModelProperty(example = "https://api.example.com/redirectToAcs", value = "Terminal URL for processing request.")
  public String getTermUrl() {
    return termUrl;
  }

  public void setTermUrl(String termUrl) {
    this.termUrl = termUrl;
  }

  public AuthenticationRedirectParams merchantData(String merchantData) {
    this.merchantData = merchantData;
    return this;
  }

   /**
   * Merchant data.
   * @return merchantData
  **/
  @ApiModelProperty(example = "MD123...sdfk", value = "Merchant data.")
  public String getMerchantData() {
    return merchantData;
  }

  public void setMerchantData(String merchantData) {
    this.merchantData = merchantData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthenticationRedirectParams authenticationRedirectParams = (AuthenticationRedirectParams) o;
    return Objects.equals(this.payerAuthenticationRequest, authenticationRedirectParams.payerAuthenticationRequest) &&
        Objects.equals(this.termUrl, authenticationRedirectParams.termUrl) &&
        Objects.equals(this.merchantData, authenticationRedirectParams.merchantData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(payerAuthenticationRequest, termUrl, merchantData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthenticationRedirectParams {\n");
    
    sb.append("    payerAuthenticationRequest: ").append(toIndentedString(payerAuthenticationRequest)).append("\n");
    sb.append("    termUrl: ").append(toIndentedString(termUrl)).append("\n");
    sb.append("    merchantData: ").append(toIndentedString(merchantData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

