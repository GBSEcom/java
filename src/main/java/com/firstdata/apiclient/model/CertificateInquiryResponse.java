/*
 * First Data REST Payment API Specification
 * First Data REST API for payment features for 6.2.0 release
 *
 * OpenAPI spec version: 0.0.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.firstdata.apiclient.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Certificate inquiry response
 */
@ApiModel(description = "Certificate inquiry response")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-04T17:00:16.359-05:00")
public class CertificateInquiryResponse {
    @SerializedName("clientRequestId")
    private String clientRequestId = null;

    @SerializedName("apiTraceId")
    private String apiTraceId = null;

    @SerializedName("certificates")
    private List<Certificate> certificates = null;

    /**
     * Request status. If it&#39;s anything other than &#39;SUCCESS&#39;, please refer to 400s HTTP error codes or decline. See Error object for details.
     */
    @JsonAdapter(RequestStatusEnum.Adapter.class)
    public enum RequestStatusEnum {
        SUCCESS("SUCCESS"),

        VALIDATION_FAILED("VALIDATION_FAILED"),

        ERROR("ERROR");

        private final String value;

        RequestStatusEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static RequestStatusEnum fromValue(String text) {
            for (RequestStatusEnum b : RequestStatusEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<RequestStatusEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final RequestStatusEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public RequestStatusEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return RequestStatusEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("requestStatus")
    private RequestStatusEnum requestStatus = null;

    @SerializedName("error")
    private Error error = null;

    public CertificateInquiryResponse clientRequestId(String clientRequestId) {
        this.clientRequestId = clientRequestId;
        return this;
    }

    /**
     * Echoes back the value in the request header for tracking
     *
     * @return clientRequestId
     **/
    @ApiModelProperty(example = "30dd879c-ee2f-11db-8314-0800200c9a66", value = "Echoes back the value in the request header for tracking")
    public String getClientRequestId() {
        return clientRequestId;
    }

    public void setClientRequestId(String clientRequestId) {
        this.clientRequestId = clientRequestId;
    }

    public CertificateInquiryResponse apiTraceId(String apiTraceId) {
        this.apiTraceId = apiTraceId;
        return this;
    }

    /**
     * Request identifier in API, can be used to request logs from the support
     *
     * @return apiTraceId
     **/
    @ApiModelProperty(example = "1231234135", value = "Request identifier in API, can be used to request logs from the support")
    public String getApiTraceId() {
        return apiTraceId;
    }

    public void setApiTraceId(String apiTraceId) {
        this.apiTraceId = apiTraceId;
    }

    public CertificateInquiryResponse certificates(List<Certificate> certificates) {
        this.certificates = certificates;
        return this;
    }

    public CertificateInquiryResponse addCertificatesItem(Certificate certificatesItem) {
        if (this.certificates == null) {
            this.certificates = new ArrayList<>();
        }
        this.certificates.add(certificatesItem);
        return this;
    }

    /**
     * Get certificates
     *
     * @return certificates
     **/
    @ApiModelProperty(value = "")
    public List<Certificate> getCertificates() {
        return certificates;
    }

    public void setCertificates(List<Certificate> certificates) {
        this.certificates = certificates;
    }

    public CertificateInquiryResponse requestStatus(RequestStatusEnum requestStatus) {
        this.requestStatus = requestStatus;
        return this;
    }

    /**
     * Request status. If it&#39;s anything other than &#39;SUCCESS&#39;, please refer to 400s HTTP error codes or decline. See Error object for details.
     *
     * @return requestStatus
     **/
    @ApiModelProperty(value = "Request status. If it's anything other than 'SUCCESS', please refer to 400s HTTP error codes or decline. See Error object for details.")
    public RequestStatusEnum getRequestStatus() {
        return requestStatus;
    }

    public void setRequestStatus(RequestStatusEnum requestStatus) {
        this.requestStatus = requestStatus;
    }

    public CertificateInquiryResponse error(Error error) {
        this.error = error;
        return this;
    }

    /**
     * Get error
     *
     * @return error
     **/
    @ApiModelProperty(value = "")
    public Error getError() {
        return error;
    }

    public void setError(Error error) {
        this.error = error;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CertificateInquiryResponse certificateInquiryResponse = (CertificateInquiryResponse) o;
        return Objects.equals(this.clientRequestId, certificateInquiryResponse.clientRequestId) &&
                Objects.equals(this.apiTraceId, certificateInquiryResponse.apiTraceId) &&
                Objects.equals(this.certificates, certificateInquiryResponse.certificates) &&
                Objects.equals(this.requestStatus, certificateInquiryResponse.requestStatus) &&
                Objects.equals(this.error, certificateInquiryResponse.error);
    }

    @Override
    public int hashCode() {
        return Objects.hash(clientRequestId, apiTraceId, certificates, requestStatus, error);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CertificateInquiryResponse {\n");

        sb.append("    clientRequestId: ").append(toIndentedString(clientRequestId)).append("\n");
        sb.append("    apiTraceId: ").append(toIndentedString(apiTraceId)).append("\n");
        sb.append("    certificates: ").append(toIndentedString(certificates)).append("\n");
        sb.append("    requestStatus: ").append(toIndentedString(requestStatus)).append("\n");
        sb.append("    error: ").append(toIndentedString(error)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

