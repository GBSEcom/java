/*
 * Payment Gateway API Specification
 * Payment Gateway API for payment processing. 
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.firstdata.firstapi.model;

import java.util.Objects;
import com.firstdata.firstapi.model.Amount;
import com.firstdata.firstapi.model.ClientLocale;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Request to generate an embedded payment link.
 */
@ApiModel(description = "Request to generate an embedded payment link.")

public class PaymentUrlRequest {
  @SerializedName("storeId")
  private String storeId = null;

  @SerializedName("clientLocale")
  private ClientLocale clientLocale = null;

  @SerializedName("amount")
  private Amount amount = null;

  @SerializedName("orderId")
  private String orderId = null;

  public PaymentUrlRequest storeId(String storeId) {
    this.storeId = storeId;
    return this;
  }

   /**
   * An optional outlet id for clients that support multiple store in the same developer app.
   * @return storeId
  **/
  @ApiModelProperty(example = "12345500000", required = true, value = "An optional outlet id for clients that support multiple store in the same developer app.")
  public String getStoreId() {
    return storeId;
  }

  public void setStoreId(String storeId) {
    this.storeId = storeId;
  }

  public PaymentUrlRequest clientLocale(ClientLocale clientLocale) {
    this.clientLocale = clientLocale;
    return this;
  }

   /**
   * Get clientLocale
   * @return clientLocale
  **/
  @ApiModelProperty(value = "")
  public ClientLocale getClientLocale() {
    return clientLocale;
  }

  public void setClientLocale(ClientLocale clientLocale) {
    this.clientLocale = clientLocale;
  }

  public PaymentUrlRequest amount(Amount amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(required = true, value = "")
  public Amount getAmount() {
    return amount;
  }

  public void setAmount(Amount amount) {
    this.amount = amount;
  }

  public PaymentUrlRequest orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Client Order ID if supplied by client, otherwise the Order ID.
   * @return orderId
  **/
  @ApiModelProperty(example = "123456", required = true, value = "Client Order ID if supplied by client, otherwise the Order ID.")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentUrlRequest paymentUrlRequest = (PaymentUrlRequest) o;
    return Objects.equals(this.storeId, paymentUrlRequest.storeId) &&
        Objects.equals(this.clientLocale, paymentUrlRequest.clientLocale) &&
        Objects.equals(this.amount, paymentUrlRequest.amount) &&
        Objects.equals(this.orderId, paymentUrlRequest.orderId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(storeId, clientLocale, amount, orderId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentUrlRequest {\n");
    
    sb.append("    storeId: ").append(toIndentedString(storeId)).append("\n");
    sb.append("    clientLocale: ").append(toIndentedString(clientLocale)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

