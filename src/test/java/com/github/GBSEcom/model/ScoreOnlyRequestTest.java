/*
 * Payment Gateway API Specification.
 * The documentation here is designed to provide all of the technical guidance required to consume and integrate with our APIs for payment processing. To learn more about our APIs please visit https://docs.firstdata.com/org/gateway.
 *
 * The version of the OpenAPI document: 6.11.0.20200423.001
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.GBSEcom.model;

import com.github.GBSEcom.model.BillingAddress;
import com.github.GBSEcom.model.Customer;
import com.github.GBSEcom.model.Device;
import com.github.GBSEcom.model.FraudOrder;
import com.github.GBSEcom.model.Loyalty;
import com.github.GBSEcom.model.Merchant;
import com.github.GBSEcom.model.Payment;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ScoreOnlyRequest
 */
public class ScoreOnlyRequestTest {
    private final ScoreOnlyRequest model = new ScoreOnlyRequest();

    /**
     * Model tests for ScoreOnlyRequest
     */
    @Test
    public void testScoreOnlyRequest() {
        // TODO: test ScoreOnlyRequest
    }

    /**
     * Test the property 'merchantRef'
     */
    @Test
    public void merchantRefTest() {
        // TODO: test merchantRef
    }

    /**
     * Test the property 'transactionType'
     */
    @Test
    public void transactionTypeTest() {
        // TODO: test transactionType
    }

    /**
     * Test the property 'originalTransactionType'
     */
    @Test
    public void originalTransactionTypeTest() {
        // TODO: test originalTransactionType
    }

    /**
     * Test the property 'originalTransactionId'
     */
    @Test
    public void originalTransactionIdTest() {
        // TODO: test originalTransactionId
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'currencyCode'
     */
    @Test
    public void currencyCodeTest() {
        // TODO: test currencyCode
    }

    /**
     * Test the property 'customer'
     */
    @Test
    public void customerTest() {
        // TODO: test customer
    }

    /**
     * Test the property 'billingAddress'
     */
    @Test
    public void billingAddressTest() {
        // TODO: test billingAddress
    }

    /**
     * Test the property 'device'
     */
    @Test
    public void deviceTest() {
        // TODO: test device
    }

    /**
     * Test the property 'loyalty'
     */
    @Test
    public void loyaltyTest() {
        // TODO: test loyalty
    }

    /**
     * Test the property 'payment'
     */
    @Test
    public void paymentTest() {
        // TODO: test payment
    }

    /**
     * Test the property 'merchant'
     */
    @Test
    public void merchantTest() {
        // TODO: test merchant
    }

    /**
     * Test the property 'order'
     */
    @Test
    public void orderTest() {
        // TODO: test order
    }

    /**
     * Test the property 'userDefined'
     */
    @Test
    public void userDefinedTest() {
        // TODO: test userDefined
    }

}
