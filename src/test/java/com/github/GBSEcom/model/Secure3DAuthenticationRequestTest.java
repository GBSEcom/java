/*
 * Payment Gateway API Specification.
 * The documentation here is designed to provide all of the technical guidance required to consume and integrate with our APIs for payment processing. To learn more about our APIs please visit https://docs.firstdata.com/org/gateway.
 *
 * The version of the OpenAPI document: 21.5.0.20211029.001
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.GBSEcom.model;

import com.github.GBSEcom.model.AuthenticationRequest;
import com.github.GBSEcom.model.Secure3DAuthenticationRequestAllOf;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Secure3DAuthenticationRequest
 */
public class Secure3DAuthenticationRequestTest {
    private final Secure3DAuthenticationRequest model = new Secure3DAuthenticationRequest();

    /**
     * Model tests for Secure3DAuthenticationRequest
     */
    @Test
    public void testSecure3DAuthenticationRequest() {
        // TODO: test Secure3DAuthenticationRequest
    }

    /**
     * Test the property 'authenticationType'
     */
    @Test
    public void authenticationTypeTest() {
        // TODO: test authenticationType
    }

    /**
     * Test the property 'termURL'
     */
    @Test
    public void termURLTest() {
        // TODO: test termURL
    }

    /**
     * Test the property 'methodNotificationURL'
     */
    @Test
    public void methodNotificationURLTest() {
        // TODO: test methodNotificationURL
    }

    /**
     * Test the property 'challengeIndicator'
     */
    @Test
    public void challengeIndicatorTest() {
        // TODO: test challengeIndicator
    }

    /**
     * Test the property 'messageCategory'
     */
    @Test
    public void messageCategoryTest() {
        // TODO: test messageCategory
    }

    /**
     * Test the property 'challengeWindowSize'
     */
    @Test
    public void challengeWindowSizeTest() {
        // TODO: test challengeWindowSize
    }

    /**
     * Test the property 'browserJavaScriptEnabled'
     */
    @Test
    public void browserJavaScriptEnabledTest() {
        // TODO: test browserJavaScriptEnabled
    }

    /**
     * Test the property 'secure3DDeviceChannel'
     */
    @Test
    public void secure3DDeviceChannelTest() {
        // TODO: test secure3DDeviceChannel
    }

    /**
     * Test the property 'secure3DThreeRIIndicator'
     */
    @Test
    public void secure3DThreeRIIndicatorTest() {
        // TODO: test secure3DThreeRIIndicator
    }

    /**
     * Test the property 'authenticationIndicator'
     */
    @Test
    public void authenticationIndicatorTest() {
        // TODO: test authenticationIndicator
    }

    /**
     * Test the property 'recurringExpiry'
     */
    @Test
    public void recurringExpiryTest() {
        // TODO: test recurringExpiry
    }

    /**
     * Test the property 'recurringFrequency'
     */
    @Test
    public void recurringFrequencyTest() {
        // TODO: test recurringFrequency
    }

}
