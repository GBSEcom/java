/*
 * Payment Gateway API Specification.
 * The documentation here is designed to provide all of the technical guidance required to consume and integrate with our APIs for payment processing. To learn more about our APIs please visit https://docs.firstdata.com/org/gateway.
 *
 * The version of the OpenAPI document: 6.11.0.20200423.001
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.GBSEcom.api;

import com.github.GBSEcom.client.ApiException;
import com.github.GBSEcom.model.ErrorResponse;
import com.github.GBSEcom.model.PaymentCardPaymentTokenUpdateRequest;
import com.github.GBSEcom.model.PaymentTokenUpdateResponse;
import com.github.GBSEcom.model.PaymentTokenizationErrorResponse;
import com.github.GBSEcom.model.PaymentTokenizationRequest;
import com.github.GBSEcom.model.PaymentTokenizationResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PaymentTokenApi
 */
@Ignore
public class PaymentTokenApiTest {

    private final PaymentTokenApi api = new PaymentTokenApi();

    
    /**
     * Create a payment token from a payment card.
     *
     * Use this to create a payment token from a payment card.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createPaymentTokenTest() throws ApiException {
        String contentType = null;
        String clientRequestId = null;
        String apiKey = null;
        Long timestamp = null;
        PaymentTokenizationRequest paymentTokenizationRequest = null;
        String messageSignature = null;
        String authorization = null;
        String region = null;
        PaymentTokenizationResponse response = api.createPaymentToken(contentType, clientRequestId, apiKey, timestamp, paymentTokenizationRequest, messageSignature, authorization, region);

        // TODO: test validations
    }
    
    /**
     * Delete a payment token.
     *
     * Use this to delete a payment token.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePaymentTokenTest() throws ApiException {
        String contentType = null;
        String clientRequestId = null;
        String apiKey = null;
        Long timestamp = null;
        String tokenId = null;
        String messageSignature = null;
        String authorization = null;
        String region = null;
        String storeId = null;
        PaymentTokenizationResponse response = api.deletePaymentToken(contentType, clientRequestId, apiKey, timestamp, tokenId, messageSignature, authorization, region, storeId);

        // TODO: test validations
    }
    
    /**
     * Get payment card details associated with token.
     *
     * Get payment card details associated with token.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPaymentTokenDetailsTest() throws ApiException {
        String contentType = null;
        String clientRequestId = null;
        String apiKey = null;
        Long timestamp = null;
        String tokenId = null;
        String messageSignature = null;
        String authorization = null;
        String region = null;
        String storeId = null;
        PaymentTokenizationResponse response = api.getPaymentTokenDetails(contentType, clientRequestId, apiKey, timestamp, tokenId, messageSignature, authorization, region, storeId);

        // TODO: test validations
    }
    
    /**
     * Update one or more payment tokens.
     *
     * Use this update one or more payment tokens.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePaymentTokenTest() throws ApiException {
        String contentType = null;
        String clientRequestId = null;
        String apiKey = null;
        Long timestamp = null;
        PaymentCardPaymentTokenUpdateRequest paymentCardPaymentTokenUpdateRequest = null;
        String messageSignature = null;
        String authorization = null;
        String region = null;
        PaymentTokenUpdateResponse response = api.updatePaymentToken(contentType, clientRequestId, apiKey, timestamp, paymentCardPaymentTokenUpdateRequest, messageSignature, authorization, region);

        // TODO: test validations
    }
    
}
