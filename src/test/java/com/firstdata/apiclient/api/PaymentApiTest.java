/*
 * First Data REST Payment API Specification
 * First Data REST API for payment features for 6.2.0 release
 *
 * OpenAPI spec version: 0.0.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.firstdata.apiclient.api;

import com.firstdata.apiclient.ApiException;
import com.firstdata.apiclient.model.CertificateCreationResponse;
import com.firstdata.apiclient.model.PrimaryTransaction;
import com.firstdata.apiclient.model.SecondaryTransaction;
import com.firstdata.apiclient.model.TransactionResponse;
import org.junit.Test;
import org.junit.Ignore;

/**
 * API tests for PaymentApi
 */
@Ignore
public class PaymentApiTest {

    private final PaymentApi api = new PaymentApi("MySecret", "MyKey");


    /**
     * Postauth transaction
     *
     * Use this to capture/complete a preauth transaction. Partial postauths are allowed.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void paymentsTransactionIdPostauthPostTest() throws ApiException {
        String transactionId = null;
        SecondaryTransaction payload = null;
        CertificateCreationResponse response = api.postAuthTransaction(transactionId, payload);

        // TODO: test validations
    }

    /**
     * Return/Refund transaction
     *
     * Use this for returns and partial returns.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void paymentsTransactionIdReturnPostTest() throws ApiException {
        String transactionId = null;
        SecondaryTransaction payload = null;
        TransactionResponse response = api.refundTransaction(transactionId, payload);

        // TODO: test validations
    }

    /**
     * Void transaction
     *
     * This is used to reverse a financial transaction such as Postauth, Return, Preauth, or Sale.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void paymentsTransactionIdVoidPostTest() throws ApiException {
        String transactionId = null;
        TransactionResponse response = api.voidTransaction(transactionId);

        // TODO: test validations
    }

    /**
     * Primary transaction creation
     *
     * Use this to originate a financial transaction, like a sale, authorization, or credit.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void primaryPaymentTransactionTest() throws ApiException {
        PrimaryTransaction payload = null;
        TransactionResponse response = api.createTransaction(payload);

        // TODO: test validations
    }

}
